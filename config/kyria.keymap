/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

//Layer definitions
#define QWERTY 0
#define NUM 1
#define NAV 2
#define SYM 3
#define FUN 4
#define AOE 5
#define AOERAISE 6
#define GAME 7
#define GAMERAISE 8
#define ADJUST 9


/ {
	behaviors {
        mt_s: ctrl_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "MODTAP_SHORT";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        mt_l: alt_gui {
            compatible = "zmk,behavior-hold-tap";
            label = "MODTAP_LONG";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
  	combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
            layers = <QWERTY>;
        };
		combo_semi {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp SEMI>;
            layers = <QWERTY>;
		};
		combo_gui_l {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&kp LGUI>;
            layers = <QWERTY NUM NAV SYM FUN>;
        };
		combo_prsc {
            timeout-ms = <50>;
            key-positions = <29 30>;
            bindings = <&kp PSCRN>;
            layers = <QWERTY NUM NAV SYM FUN>;
        };
		combo_lpar {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp LPAR>;
            layers = <QWERTY NUM NAV SYM FUN>;
        };
        combo_rpar {
            timeout-ms = <50>;
            key-positions = <31 32>;
            bindings = <&kp RPAR>;
            layers = <QWERTY NUM NAV SYM FUN>;
        };
    };

	keymap {
		compatible = "zmk,keymap";

		qwerty {
	// GASC home row mods. Layer key mods. Mod tap for zxcv. Mod tap for backspace/shift
	// ----------------------------------------------  ------------------------------------------------
	// |    |  Q  |  W  |  E  |  R  |  T  |                      |  Y  |  U  |  I  |  O  |  P  |      |
	// |    |  A  |  S  |  D  |  F  |  G  |                      |  H  |  J  |  K  |  L  |  ;  |  '   |
	// |    |  Z  |  X  |  C  |  V  |  B  |    | VDN|  | VUP| OUT|  N  |  M  |  ,  |  .  |  /  | CAPS |
	//                  |  PP | TAB | NUM | SPC| NAV|  | FUN| SFT| SYM | ENT | MUTE|
	//                              |     |    |    |  |    | BSP| DEL |

        bindings = <
    &none   &kp Q         &mt_s LC(W) W   &kp E       &mt_s LC(R) R   	&mt_s LC(T) T                     	  		/**/                                    &kp Y       &mt_s LC(U) U	  	&mt_s LC(I) I &mt_s LC(O) O &kp P       &none
    &none   &mt_s LC(A) A   &mt_s LALT S   	&mt_s LSHFT D	&mt_s LCTRL F		&kp G                       	        	/**/                                    &kp H       &mt_s LCTRL J		&mt_s LSHFT K	&kp L      	&kp SQT    	&none
    &none   &mt_s LC(Z) Z   &mt_s LC(X) X   &mt_s LC(C) C &mt_s LC(V) V   	&mt_s LC(B) B	&none       	&kp C_VOL_DN  	/**/	&kp C_VOL_UP    &none    		&mt_s LC(N) N &kp M           &kp COMMA   &kp DOT     &kp FSLH    &kp CAPS
                                    	&kp C_PP    &kp TAB         &mo NUM		&mt_s LSHFT SPACE	&mo NAV 		/**/    &mo FUN         &mt_s LSHFT BSPC  &lt SYM DEL	&kp ENTER       &kp C_MUTE
                        >;
        };
		num {
	// ----------------------------------------------------  --------------------------------------------------------
	// |       |     |     |      |      |      |                      |  +   |  7    |  8    |  9   |   *   |      |
	// |       |     |     |      |      |      |                      |  =   |  4    |  5    |  6   |   |   |      |
	// |       |     |     |      |      |      |    |    |  |    |    |  -   |  1    |  2    |  3   |   \   |      |
	//                     |      |      |      |    |    |  |  - |  0 | ADJ/.|       |       |

        bindings = <
    &none   &none   	&none   	&none       &none       &none                   /**/                    &kp PLUS       	&kp N7  &kp N8  &kp N9  &kp STAR    &none
    &none   &kp LGUI	&kp LALT   	&kp LSHFT   &kp LCTRL   &none                   /**/                    &kp MINUS       &kp N4  &kp N5  &kp N6  &kp PIPE    &none
    &none   &none   	&none   	&none       &none       &none   &none   &none   /**/    &none   &none   &kp EQUAL      	&kp N1  &kp N2  &kp N3  &kp BSLH    &none
                            		&none       &trans      &none   &none   &none   /**/    &none	&kp N0  &lt ADJUST DOT  &none   &none
                        >;
        };
		nav {
	// ----------------------------------------------------  --------------------------------------------------------
	// |       |     |     |      |      |      |                      |      |   [   |   ]   |  {   |   }   |      |
	// |       |     |     |      |      |      |                      |      |  LEFT |  DOWN |  UP  | RIGHT |      |
	// |       |     |     |      |      |      |    |    |  |    |    |      |  HOME |  PGDN | PGUP |  END  |      |
	//                     |      |      |      |    |    |  |    |    | ADJ  |       |       |      |

        bindings = <
    &none   &none       &none       &none       &none       &none                   /**/                    &none       &kp LBKT    &kp RBKT    &kp LBRC    &kp RBRC    &none
    &none   &kp LGUI    &kp LALT    &kp LSHFT   &kp LCTRL   &none                   /**/                    &none       &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &none
    &none   &none       &none       &none       &none       &none   &none   &none   /**/    &none    &none  &none       &kp HOME    &kp PG_DN   &kp PG_UP   &kp END     &none
                                    &none       &none       &trans  &none   &none   /**/    &none    &none	&mo ADJUST	&none       &none
                        >;
        };
        sym {
	// ----------------------------------------------------  --------------------------------------------------------
	// |       |  !  |  @  |  #   |  $   |  %   |                      |      |       |       |      |       |      |
	// |       |  ^  |  &  |  _   |  `   |  ~   |                      |      |       |       |      |       |      |
	// |       |     |     |      |      |      |    |    |  |    |    |      |       |       |      |       |      |
	//                     |      |      |      |    |    |  |    |    |      |       |       |

        bindings = <
    &none   &kp EXCL    &kp AT      &kp HASH    &kp DLLR    &kp PRCNT                   /**/                    &none   &none       &none       &none       &none       &none
    &none   &kp CARET   &kp AMPS    &kp UNDER   &kp GRAVE   &kp TILDE                   /**/                    &none   &kp LCTRL   &kp LSHFT   &kp LALT    &kp LGUI    &none
    &none   &none       &none       &none       &none       &none       &none    &none  /**/    &none    &none  &none   &none       &none       &none       &none       &none
                                    &none       &none       &mo ADJUST  &none    &none  /**/    &none    &none  &trans  &none       &none
                        >;
        };
        fun {
	// ----------------------------------------------------  --------------------------------------------------------
	// |       |  F1 |  F2 |  F3  |  F4  |      |                      |      |       |       |      |       |      |
	// |       |  F5 |  F6 |  F7  |  F8  |      |                      |      |       |       |      |       |      |
	// |       |  F9 |  F10|  F11 |  F12 |      |    |    |  |    |    |      |       |       |      |       |      |
	//                     |      |      |      |    |    |  |    |    |      |       |       |

        bindings = <
    &none   &kp F1  &kp F2  &kp F3  &kp F4  &none                       /**/                    &none   &none       &none       &none       &none       &none
    &none   &kp F5  &kp F6  &kp F7  &kp F8  &none                       /**/                    &none   &kp LCTRL   &kp LSHFT   &kp LALT    &kp LGUI    &none
    &none   &kp F9  &kp F10 &kp F11 &kp F12 &none       &none   &none   /**/    &none    &none  &none   &none       &none       &none       &none       &none
                            &none   &none   &mo ADJUST  &none   &none   /**/    &none    &none  &trans  &none       &none
                        >;
        };
		aoe {
	// -----------------------------------------------  -----------------------------------------------
	// | CTRL|  Q  |  W  |  E  |  R  |  T  |                      |  Y  |  U  |  I  |  O  |  P  | BSPC|
	// | ALT |  A  |  S  |  D  |  F  |  G  |                      |  H  |  J  |  K  |  L  |  ;  |  '  |
	// |  H  |  Z  |  X  |  C  |  V  |  B  | F7 | F8 |  |    |    |  N  |  M  |  ,  |  .  |  /  | CAPS|
	//                   |     | TAB | ESC | SPC| SFT|  |    |    |LSHFT| XXX |ENTER|

        bindings = <
    &kp LCTRL   &kp Q   &kp W   &kp E   &kp R   &kp T                                       /**/                            &kp Y   &kp U       &kp I       &kp O   &kp P       &kp BSPC
    &kp LALT    &kp A   &kp S   &kp D   &kp F   &kp G                                       /**/                            &kp H   &kp J       &kp K       &kp L   &kp SEMI    &kp SQT
    &kp H       &kp Z   &kp X   &kp C   &kp V   &kp B               &kp F7      &kp F8      /**/    &none   &none           &kp N   &kp M       &kp COMMA   &kp DOT &kp FSLH    &kp CAPS
                                &none   &kp TAB &lt AOERAISE ESC    &kp SPACE   &kp LSHFT   /**/    &none   &mt_s LSHFT BSPC  &kp DEL &kp ENTER   &none
                    >;
        };
        aoeraise {
	// -----------------------------------------------  -----------------------------------------------
	// |  0  |  1  |  2  |  3  |  4  |  5  |                      |     |     |     |     |     |     |
	// |LS(0)|LS(1)|LS(2)|LS(3)|LS(4)|LS(5)|                      |     |     |     |     |     |     |
	// | F6  |  F1 |  F2 |  F3 |  F4 |  F5 | F9 |    |  |    |    |     |     |     |     |     |     |
	//                   |     |     |     |    |    |  |    |    |     | ADJ |     |

        bindings = <
    &kp N0      &kp N1      &kp N2      &kp N3      &kp N4      &kp N5                      /**/                    &trans      &trans  &trans  &trans  &trans  &trans
    &kp LS(N0)  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)                  /**/                    &trans      &trans  &trans  &trans  &trans  &trans
    &kp F6      &kp F1      &kp F2      &kp F3      &kp F4      &kp F5      &kp F9  &none   /**/    &none   &none   &trans      &trans  &trans  &trans  &trans  &trans
                                        &trans      &trans      &trans      &none   &none   /**/    &none   &none   &mo ADJUST  &trans  &none
                    >;
        };
        game {
	// -----------------------------------------------  -----------------------------------------------
	// | CTRL|  Q  |  W  |  E  |  R  |  T  |                      |  Y  |  U  |  I  |  O  |  P  | BSPC|
	// | ALT |  A  |  S  |  D  |  F  |  G  |                      |  H  |  J  |  K  |  L  |  ;  |  '  |
	// |  `  |  Z  |  X  |  C  |  V  |  B  |    |    |  |    |    |  N  |  M  |  ,  |  .  |  /  | CAPS|
	//                   |SHIFT| MNRS|SPACE|    |    |  |    |    |LSHFT| XXX |ENTER|

        bindings = <
    &kp LCTRL   &kp Q   &kp W   &kp E       &kp R   &kp T                                       /**/                            &kp Y   &kp U       &kp I       &kp O       &kp P       &none
    &kp LALT    &kp A   &kp S   &kp D       &kp F   &kp G                                       /**/                            &kp H   &kp J       &kp K       &kp L       &kp SEMI    &kp SQT
    &kp GRAVE	&kp Z   &kp X   &kp C       &kp V   &kp B               &kp F3      &none       /**/    &none    &none          &kp N   &kp M       &kp COMMA   &kp DOT     &kp FSLH    &kp CAPS
                        		&kp F5      &kp TAB &lt GAMERAISE ESC   &kp SPACE   &kp LSHFT   /**/    &none    &mt_s LSHFT BSPC &kp DEL &kp ENTER   &kp C_MUTE
                    >;
        };
        gameraise {
	// -----------------------------------------------  -----------------------------------------------
	// |     |  1  |  2  |  3  |  4  |  5  |                      |     |     |     |     |     |     |
	// |     |  6  |  7  |  8  |  9  |  0  |                      |     |     |     |     |     |     |
	// |     |  F1 |  F2 |  F3 |  F4 |  F5 |    |    |  |    |    |     |     |     |     |     |     |
	//                   |     |     |     |    |    |  |    |    |     | ADJ |     |

        bindings = <
    &trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                  /**/                    &trans      &trans  &trans  &trans  &trans  &trans
    &trans  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0                  /**/                    &trans      &trans  &trans  &trans  &trans  &trans
    &trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &none   &none   /**/    &none    &none  &trans      &trans  &trans  &trans  &trans  &trans
                            &none   &trans  &trans  &trans  &none   /**/    &none    &none  &mo ADJUST  &trans  &trans
                    >;
        };
        adjust {
	// -----------------------------------------------  -----------------------------------------------
	// |RESET|     |     |     |     |     |                      |     |     |     |     |     |     |
	// |     |     |BTCLR| BT1 | BT2 |SG(L)|                      |SG(R)|LG(L)|LG(D)|LG(U)|LG(R)|     |
	// |PSCRN|     |     |     | AOE | MINE|    |    |  |    |    |COLEM|QWERT|     |     |     |     |
	//                   |     |     |     |    |    |  |    |    |     |     |     |

        bindings = <
    &none 		&none   	&none       &none           &none           &none                                   /**/                        &none               &none           &none           &none       &none           &none
    &none 		&none   	&bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1    &kp LG(LS(LEFT))                        /**/						&kp LG(LS(RIGHT))   &kp LG(LEFT)    &kp LG(DOWN)    &kp LG(UP)  &kp LG(RIGHT)   &none
    &none       &to GAME   	&to AOE     &none           &none         	&none            	&trans    &none     /**/    &none   &none  		&none               &none           &none           &none       &to QWERTY      &none
                                    	&none           &trans          &trans              &trans    &trans    /**/    &trans  &trans      &trans              &trans          &none
            >;
        };
	};
};
